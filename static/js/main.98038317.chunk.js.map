{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","style","section","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","Notification","message","App","state","handleClick","e","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,WAAa,iC,2KCehBC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,0BAASC,UAAWC,IAAMC,QAA1B,UACI,oBAAIF,UAAWC,IAAMH,MAArB,SAA6BA,IAC5BC,M,gBCoBEI,EAtBS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACpB,mCACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBACIP,UAAWC,IAAMO,OAEjBC,KAAK,SACLC,KAAMH,EACNI,QAASN,EALb,SAOKE,GALIA,S,iBCYNK,EAnBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,sBAAKjB,UAAWC,IAAMiB,WAAtB,UACI,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCGGE,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAIA,KC4CGC,E,4MAtCbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,YAAc,SAAAC,GACZ,IAAMd,EAAOc,EAAEC,OAAOf,KACtB,EAAKgB,UAAS,SAAAJ,GAAK,kCACdA,GADc,kBAEhBZ,EAAO,EAAKY,MAAMZ,GAAQ,Q,EAI/BiB,mBAAqB,kBAAI,EAAKL,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,K,EAE3Ea,gCAAkC,kBAAKC,KAAKC,MAAO,EAAKR,MAAMT,KAAK,EAAKc,qBAAsB,M,4CAG9F,WACE,IAAMvB,EAAU2B,OAAOC,KAAKC,KAAKX,OACjC,EAA+BW,KAAKX,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASjB,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBM,QAASA,EAASC,gBAAiB4B,KAAKV,gBAE3D,cAAC,EAAD,CAASzB,MAAO,aAAhB,SACGmC,KAAKN,qBACF,cAAC,EAAD,CAAYd,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOiB,KAAKN,qBAAsBV,mBAAoBgB,KAAKL,oCAC/G,cAAE,EAAF,CAAeR,QAAS,+B,GAhCpBc,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAxC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.98038317.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3YpeQ\"};","import PropTypes from 'prop-types';\r\nimport style from './Section.module.css';\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section className={style.section}>\r\n            <h2 className={style.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children:PropTypes.node\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback})=>(\r\n    <>\r\n        {options.map(option=>(\r\n            <button\r\n                className={style.button}\r\n                key={option} \r\n                type=\"button\" \r\n                name={option}\r\n                onClick={onLeaveFeedback}\r\n            >\r\n                {option}\r\n            </button>\r\n        ))}\r\n    </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(\r\n        PropTypes.string.isRequired),\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport style from './Statistics.module.css';\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <div className={style.statistics}>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage} %</p>\r\n        </div>\r\n    );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p>{message}</p>\r\n    );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message:PropTypes.string.isRequired  \r\n}\r\n\r\nexport default Notification\r\n","\nimport React, { Component } from \"react\";\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = e => {\n    const name = e.target.name;\n    this.setState(state => ({\n      ...state,\n      [name]: this.state[name] + 1\n    }));\n  };\n  \n  countTotalFeedback = ()=>this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = ()=> Math.round((this.state.good/this.countTotalFeedback())*100);\n  \n   \n  render() {\n    const options = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n   \n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions options={options} onLeaveFeedback={this.handleClick} />\n        </Section>\n        <Section title={'Statistics'}>\n          {this.countTotalFeedback() \n            ? <Statistics good={good} neutral={neutral} bad={bad} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()} />\n            : < Notification message={'No feedback given'}/>}\n        </Section>\n        </>\n    )\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2jSLS\",\"title\":\"Section_title__2qKi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3fwE6\"};"],"sourceRoot":""}